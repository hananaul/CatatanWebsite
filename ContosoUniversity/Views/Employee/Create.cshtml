@model ContosoUniversity.Models.Employee

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameLast, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameLast, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameLast, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlaceOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Male:   @Html.RadioButton("Gender", "Male")
                Female: @Html.RadioButton("Gender", "Female")
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Addresss, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Addresss, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Addresss, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID, "Marriage Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MarriedStatus", new List<SelectListItem>
                {
                    new SelectListItem {Text="Single", Value="Single", Selected=true },
                    new SelectListItem {Text="Divorse", Value="Divorse" },
                    new SelectListItem {Text="Married", Value="Married"},
                    }, htmlAttributes: new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HireDatee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HireDatee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HireDatee, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <br>    
    </div>
}
@using (Html.BeginForm())
{
       

    <body>
        <button type="button" align="right" class="btn btn-default" data-toggle="modal" data-target="#myModal">ADD</button>


        <table class="table" id="myTable" border="1">
            <tr>
                <td>Skill</td>
                <td>Level</td>
            </tr>
        </table>

        <div class="container">
            <!-- Trigger the modal with a button -->
            <!-- Modal -->
            <div class="modal fade" id="myModal" role="dialog">
                <div class="modal-dialog">


                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Employee Skill</h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="usr">Skill:</label>
                                <input class="form-control" id="Skill" type="text" />

                                <label for="usr">Level:</label>
                                <input class="form-control" id="Level" type="number" />
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" onclick="myCreateFunction()">Simpan</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Batal</button>
                        </div>
                    </div>


                </div>
            </div>

        </div>

        <script>
           function myCreateFunction() {
               var table = document.getElementById("myTable");
               var row = table.insertRow(1);
               row.className = "content";
               var cell1 = row.insertCell(0);
               var cell2 = row.insertCell(1);
               cell1.className = "skill";
               cell2.className = "level";
               //css classname dan id = lowercase agar rapi
               cell1.innerHTML = document.getElementById('Skill').value;
               cell2.innerHTML = document.getElementById('Level').value;
           }

           function AmbilDataDariTable() {
               var dataSkill = [];
               $(".content").each(function (index, element) {
                   var td = $(element).children();
                   var barisSkill = {};

                   console.log(td);
                   td.each(function (index, element) {
                       if (element.className == "skill") {
                           barisSkill.skill = element.innerText;
                       }
                       else {
                           barisSkill.level = element.innerText;
                       }
                       
                   });
                   dataSkill.push(barisSkill);
               })
               return dataSkill;
           }


           function getEmployeeData() {
               var employee = {};
               employee.firstname = $("#FirstName").val();
               employee.namelast = $("#NameLast").val();
               employee.dateofbirth = $("#DateOfBirth").val();
               employee.placeofbirth = $("#PlaceOfBirth").val();
               employee.gender = $("input[name=Gender]:checked").val();
               employee.phonenumber = $("#PhoneNumber").val();
               employee.address = $("#Addresss").val();
               employee.postalcode = $("#PostalCode").val();
               employee.marriedstatus = $("#MarriedStatus").val();
               employee.hiredate = $("#HireDatee").val();
               employee.skills = AmbilDataDariTable();
               return employee;
               //object.keyvalue = value               
           }

           function saveEmployee() {
               $.ajax({
                   url: '/Employee/CreateAjax',
                   data: getEmployeeData(),
                   dataType: 'json',
                   method : 'post'
               }).then(function (hasil) {
                   console.log(hasil);
               })
           }

        </script>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" value="Create" onclick="saveEmployee()" class="btn btn-default"> </button>
            </div>
        </div>

    </body>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

